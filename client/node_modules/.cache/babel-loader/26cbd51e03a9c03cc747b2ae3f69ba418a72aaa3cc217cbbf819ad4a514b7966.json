{"ast":null,"code":"var _jsxFileName = \"/home/fjavifp/Documents/Swapster/client/src/mostrarusuarios.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport NavBar from './Componentes/topBar';\nimport './App.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst MostrarUsuarios = () => {\n  _s();\n  const [usuarios, setUsuarios] = useState([]);\n  const [userLoggedIn, setUserLoggedIn] = useState(false);\n  useEffect(() => {\n    const fetchUsuarios = async () => {\n      try {\n        const response = await axios.get('http://localhost:5000/api/usuarios');\n        setUsuarios(response.data.usuarios); // Actualiza el estado con la lista de usuarios\n      } catch (error) {\n        console.error('Error al cargar los usuarios:', error);\n      }\n    };\n    fetchUsuarios();\n  }, []);\n  const handleDelete = async userId => {\n    try {\n      await axios.delete(`http://localhost:5000/api/usuarios/${userId}`);\n      // Actualizar la lista de usuarios después de eliminar\n      const updatedUsuarios = usuarios.filter(usuario => usuario._id !== userId);\n      setUsuarios(updatedUsuarios);\n      console.log('Usuario eliminado correctamente');\n    } catch (error) {\n      console.error('Error al eliminar el usuario:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {\n      userLoggedIn: userLoggedIn\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"usuarios-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Usuarios\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), usuarios.length > 0 ? /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"usuarios-table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Nombre\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Correo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: usuarios.map(usuario => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: usuario.Nombre\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: usuario.Correo\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleDelete(usuario._id),\n                children: \"Eliminar\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 37\n            }, this)]\n          }, usuario._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No se encontraron usuarios\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(MostrarUsuarios, \"AzkLFU/KeQ0+ANZ3jhiA7o/VO5o=\");\n_c = MostrarUsuarios;\nexport default MostrarUsuarios;\n\n/*\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport './App.css'; // Importar tu archivo CSS personalizado\r\n\r\nconst MostrarUsuarios = () => {\r\n    const [usuarios, setUsuarios] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchUsuarios = async () => {\r\n            try {\r\n                const response = await axios.get('http://localhost:5000/api/usuarios');\r\n                setUsuarios(response.data.usuarios); // Actualiza el estado con la lista de usuarios\r\n            } catch (error) {\r\n                console.error('Error al cargar los usuarios:', error);\r\n            }\r\n        };\r\n\r\n        fetchUsuarios();\r\n    }, []);\r\n\r\n    const handleDelete = async (userId) => {\r\n        try {\r\n            await axios.delete(`http://localhost:5000/api/usuarios/${userId}`);\r\n            // Actualizar la lista de usuarios después de eliminar\r\n            const updatedUsuarios = usuarios.filter((usuario) => usuario._id !== userId);\r\n            setUsuarios(updatedUsuarios);\r\n            console.log('Usuario eliminado correctamente');\r\n        } catch (error) {\r\n            console.error('Error al eliminar el usuario:', error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"usuarios-container\">\r\n            <h1>Usuarios</h1>\r\n            {usuarios.length > 0 ? (\r\n                <table className=\"usuarios-table\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Nombre</th>\r\n                            <th>Correo</th>\r\n                            <th></th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {usuarios.map((usuario) => (\r\n                            <tr key={usuario._id}>\r\n                                <td>{usuario.Nombre}</td>\r\n                                <td>{usuario.Correo}</td>\r\n                                <td>\r\n                                    <button onClick={() => handleDelete(usuario._id)}>Eliminar</button>\r\n                                </td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </table>\r\n            ) : (\r\n                <p>No se encontraron usuarios</p>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MostrarUsuarios;\r\n*/\nvar _c;\n$RefreshReg$(_c, \"MostrarUsuarios\");","map":{"version":3,"names":["React","useState","useEffect","axios","NavBar","jsxDEV","_jsxDEV","Fragment","_Fragment","MostrarUsuarios","_s","usuarios","setUsuarios","userLoggedIn","setUserLoggedIn","fetchUsuarios","response","get","data","error","console","handleDelete","userId","delete","updatedUsuarios","filter","usuario","_id","log","children","fileName","_jsxFileName","lineNumber","columnNumber","className","length","map","Nombre","Correo","onClick","_c","$RefreshReg$"],"sources":["/home/fjavifp/Documents/Swapster/client/src/mostrarusuarios.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport NavBar from './Componentes/topBar'; \r\nimport './App.css'; \r\n\r\nconst MostrarUsuarios = () => {\r\n    const [usuarios, setUsuarios] = useState([]);\r\n\r\n    const [userLoggedIn, setUserLoggedIn] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const fetchUsuarios = async () => {\r\n            try {\r\n                const response = await axios.get('http://localhost:5000/api/usuarios');\r\n                setUsuarios(response.data.usuarios); // Actualiza el estado con la lista de usuarios\r\n            } catch (error) {\r\n                console.error('Error al cargar los usuarios:', error);\r\n            }\r\n        };\r\n\r\n        fetchUsuarios();\r\n    }, []);\r\n\r\n    const handleDelete = async (userId) => {\r\n        try {\r\n            await axios.delete(`http://localhost:5000/api/usuarios/${userId}`);\r\n            // Actualizar la lista de usuarios después de eliminar\r\n            const updatedUsuarios = usuarios.filter((usuario) => usuario._id !== userId);\r\n            setUsuarios(updatedUsuarios);\r\n            console.log('Usuario eliminado correctamente');\r\n        } catch (error) {\r\n            console.error('Error al eliminar el usuario:', error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <NavBar userLoggedIn={userLoggedIn} />\r\n            <div className=\"usuarios-container\">\r\n                <h1>Usuarios</h1>\r\n                {usuarios.length > 0 ? (\r\n                    <table className=\"usuarios-table\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Nombre</th>\r\n                                <th>Correo</th>\r\n                                <th></th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {usuarios.map((usuario) => (\r\n                                <tr key={usuario._id}>\r\n                                    <td>{usuario.Nombre}</td>\r\n                                    <td>{usuario.Correo}</td>\r\n                                    <td>\r\n                                        <button onClick={() => handleDelete(usuario._id)}>Eliminar</button>\r\n                                    </td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </table>\r\n                ) : (\r\n                    <p>No se encontraron usuarios</p>\r\n                )}\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default MostrarUsuarios;\r\n\r\n/*\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport './App.css'; // Importar tu archivo CSS personalizado\r\n\r\nconst MostrarUsuarios = () => {\r\n    const [usuarios, setUsuarios] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchUsuarios = async () => {\r\n            try {\r\n                const response = await axios.get('http://localhost:5000/api/usuarios');\r\n                setUsuarios(response.data.usuarios); // Actualiza el estado con la lista de usuarios\r\n            } catch (error) {\r\n                console.error('Error al cargar los usuarios:', error);\r\n            }\r\n        };\r\n\r\n        fetchUsuarios();\r\n    }, []);\r\n\r\n    const handleDelete = async (userId) => {\r\n        try {\r\n            await axios.delete(`http://localhost:5000/api/usuarios/${userId}`);\r\n            // Actualizar la lista de usuarios después de eliminar\r\n            const updatedUsuarios = usuarios.filter((usuario) => usuario._id !== userId);\r\n            setUsuarios(updatedUsuarios);\r\n            console.log('Usuario eliminado correctamente');\r\n        } catch (error) {\r\n            console.error('Error al eliminar el usuario:', error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"usuarios-container\">\r\n            <h1>Usuarios</h1>\r\n            {usuarios.length > 0 ? (\r\n                <table className=\"usuarios-table\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Nombre</th>\r\n                            <th>Correo</th>\r\n                            <th></th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {usuarios.map((usuario) => (\r\n                            <tr key={usuario._id}>\r\n                                <td>{usuario.Nombre}</td>\r\n                                <td>{usuario.Correo}</td>\r\n                                <td>\r\n                                    <button onClick={() => handleDelete(usuario._id)}>Eliminar</button>\r\n                                </td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </table>\r\n            ) : (\r\n                <p>No se encontraron usuarios</p>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MostrarUsuarios;\r\n*/\r\n\r\n\r\n\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEnB,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAM,CAACY,YAAY,EAAEC,eAAe,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EAEvDC,SAAS,CAAC,MAAM;IACZ,MAAMa,aAAa,GAAG,MAAAA,CAAA,KAAY;MAC9B,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMb,KAAK,CAACc,GAAG,CAAC,oCAAoC,CAAC;QACtEL,WAAW,CAACI,QAAQ,CAACE,IAAI,CAACP,QAAQ,CAAC,CAAC,CAAC;MACzC,CAAC,CAAC,OAAOQ,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;MACzD;IACJ,CAAC;IAEDJ,aAAa,CAAC,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMM,YAAY,GAAG,MAAOC,MAAM,IAAK;IACnC,IAAI;MACA,MAAMnB,KAAK,CAACoB,MAAM,CAAE,sCAAqCD,MAAO,EAAC,CAAC;MAClE;MACA,MAAME,eAAe,GAAGb,QAAQ,CAACc,MAAM,CAAEC,OAAO,IAAKA,OAAO,CAACC,GAAG,KAAKL,MAAM,CAAC;MAC5EV,WAAW,CAACY,eAAe,CAAC;MAC5BJ,OAAO,CAACQ,GAAG,CAAC,iCAAiC,CAAC;IAClD,CAAC,CAAC,OAAOT,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;IACzD;EACJ,CAAC;EAED,oBACIb,OAAA,CAAAE,SAAA;IAAAqB,QAAA,gBACIvB,OAAA,CAACF,MAAM;MAACS,YAAY,EAAEA;IAAa;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACtC3B,OAAA;MAAK4B,SAAS,EAAC,oBAAoB;MAAAL,QAAA,gBAC/BvB,OAAA;QAAAuB,QAAA,EAAI;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EAChBtB,QAAQ,CAACwB,MAAM,GAAG,CAAC,gBAChB7B,OAAA;QAAO4B,SAAS,EAAC,gBAAgB;QAAAL,QAAA,gBAC7BvB,OAAA;UAAAuB,QAAA,eACIvB,OAAA;YAAAuB,QAAA,gBACIvB,OAAA;cAAAuB,QAAA,EAAI;YAAM;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACf3B,OAAA;cAAAuB,QAAA,EAAI;YAAM;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACf3B,OAAA;cAAAwB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACT;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACF,CAAC,eACR3B,OAAA;UAAAuB,QAAA,EACKlB,QAAQ,CAACyB,GAAG,CAAEV,OAAO,iBAClBpB,OAAA;YAAAuB,QAAA,gBACIvB,OAAA;cAAAuB,QAAA,EAAKH,OAAO,CAACW;YAAM;cAAAP,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eACzB3B,OAAA;cAAAuB,QAAA,EAAKH,OAAO,CAACY;YAAM;cAAAR,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eACzB3B,OAAA;cAAAuB,QAAA,eACIvB,OAAA;gBAAQiC,OAAO,EAAEA,CAAA,KAAMlB,YAAY,CAACK,OAAO,CAACC,GAAG,CAAE;gBAAAE,QAAA,EAAC;cAAQ;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACnE,CAAC;UAAA,GALAP,OAAO,CAACC,GAAG;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAMhB,CACP;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC,gBAER3B,OAAA;QAAAuB,QAAA,EAAG;MAA0B;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CACnC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA,eACR,CAAC;AAEX,CAAC;AAACvB,EAAA,CA9DID,eAAe;AAAA+B,EAAA,GAAf/B,eAAe;AAgErB,eAAeA,eAAe;;AAE9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAjEA,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}